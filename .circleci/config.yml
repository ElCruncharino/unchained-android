# https://circleci.com/docs/2.0/language-android/
version: 2

jobs:
  build:
    working_directory: ~/unchained-android/app
    docker:
      - image: circleci/android:api-30-alpha
    environment:
      JVM_OPTS: -Xmx2048m
    steps:
      - checkout:
          path: ~/unchained-android
      - run:
          name: Delete Cache
          command: rm -r ~/.gradle
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run: echo $ENCODED_KEYSTORE | base64 --decode > ~/unchained-android/app/release.pfk
      - run: echo 'export KEYSTORE=~/unchained-android/app/release.pfk' >> $BASH_ENV
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      - run:
          name: Build
          command: ./gradlew clean assembleRelease --stacktrace
      - store_artifacts: # save the generated apk folder
          path: app/build/outputs/apk/release
          destination: release
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
